
.. _metapackage_ref:

conda metapackage
=======================

.. raw:: html

   <PRE>
   <!-- Manpage converted by man2html 3.0.1 -->
   <B>CONDA(1)</B>                         User Commands                        <B>CONDA(1)</B>
   
   
   
   NAME
          conda - conda metapackage
   
   DESCRIPTION
          usage: conda-metapackage [-h] [--no-binstar-upload]
   
          [--build-number BUILD_NUMBER]
                 [--build-string   BUILD_STRING]   [--dependencies  [DEPENDENCIES
                 [DEPENDENCIES ...]]]  [--home HOME] [--license LICENSE]  [--sum‐
                 mary SUMMARY] [--entry-points [ENTRY_POINTS [ENTRY_POINTS ...]]]
                 name version
   
          tool for building conda metapackages. A metapackage is a  package  with
          no files, only metadata
   
      positional arguments:
          name   name of the created package
   
          version
                 version of the created package
   
      optional arguments:
          -h, --help
                 show this help message and exit
   
          --no-binstar-upload
                 do not ask to upload the package to binstar
   
          --build-number BUILD_NUMBER
                 build number for the package (default is 0)
   
          --build-string BUILD_STRING
                 build  string  for  the package (default is automatically gener‐
                 ated)
   
          --dependencies  [DEPENDENCIES  [DEPENDENCIES  ...]],  -d  [DEPENDENCIES
          [DEPENDENCIES ...]]
                 The  dependencies  of the package. To specify a version restric‐
                 tion for a dependency,  wrap  the  dependency  in  quotes,  like
                 "package &gt;=2.0"
   
          --home HOME
                 The homepage for the metapackage
   
          --license LICENSE
                 The license of the metapackage
   
          --summary SUMMARY
                 Summary  of the package. Pass this in as a string on the command
                 line, like --summary 'A metapackage for X'. It is recommended to
                 use  single quotes if you are not doing variable substitution to
                 avoid interpretation of special characters.
   
          --entry-points [ENTRY_POINTS [ENTRY_POINTS ...]]
                 Python entry points to create automatically. They should use the
                 same   syntax   as   in   the   meta.yaml  of  a  recipe,  e.g.,
                 --entry-points bsdiff4=bsdiff4.cli:main_bsdiff4 will  create  an
                 entry point called bsdiff4 that calls bsdiff4.cli.main_bsdiff4()
   
   
   
   Continuum Analytics              February 2015                        <B>CONDA(1)</B>
   </PRE>
