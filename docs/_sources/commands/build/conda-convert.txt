
.. _convert_ref:

conda convert
=======================

.. raw:: html

   <PRE>
   <!-- Manpage converted by man2html 3.0.1 -->
   <B>CONDA(1)</B>                         User Commands                        <B>CONDA(1)</B>
   
   
   
   NAME
          conda - conda convert
   
   DESCRIPTION
          usage:               conda-convert               [-h]               [-p
          {osx-64,linux-32,linux-64,win-32,win-64,all}]
   
          [--dependencies [DEPENDENCIES [DEPENDENCIES ...]]]
                 [--show-imports] [-f] [-o  OUTPUT_DIR]  [-v]  [--dry-run]  pack‐
                 age-files [package-files ...]
   
          various tools to convert conda packages
   
      positional arguments:
          package-files
                 package files to convert
   
      optional arguments:
          -h, --help
                 show this help message and exit
   
          -p       {osx-64,linux-32,linux-64,win-32,win-64,all},       --platform
          {osx-64,linux-32,linux-64,win-32,win-64,all}
                 Platform to convert the packages to
   
          --dependencies  [DEPENDENCIES  [DEPENDENCIES  ...]],  -d  [DEPENDENCIES
          [DEPENDENCIES ...]]
                 Additional  (besides python) dependencies of the converted pack‐
                 age. To specify a version restriction for a dependency, wrap the
                 dependency in quotes, like 'package &gt;=2.0'
   
          --show-imports
                 Show Python imports for compiled parts of the package
   
          -f, --force
                 Force convert, even when a package has compiled C extensions
   
          -o OUTPUT_DIR, --output-dir OUTPUT_DIR
                 Directory  to write the output files. The packages will be orga‐
                 nized   in   platform/   subdirectories,   e.g.,    win-32/pack‐
                 age-1.0-py27_0.tar.bz2
   
          -v, --verbose
                 Print verbose output
   
          --dry-run
                 only display what would have been done
   
          Tool to convert packages ------------------------
   
          Convert  pure  Python  packages  to  other  platforms,  and  to convert
          Gohlke's .exe packages into conda packages.
   
          Packages are automatically organized  in  subdirectories  according  to
          platform, e.g.,
   
          osx-64/
   
                 package-1.0-py33.tar.bz2
   
          win-32/
   
                 package-1.0-py33.tar.bz2
   
   EXAMPLES
          Convert  a  package built with conda build to Windows 64-bit, and place
          the resulting package in the current  directory  (supposing  a  default
          Anaconda install on Mac OS X): $ conda convert package-1.0-py33.tar.bz2
          -p win-64
   
          Convert a .exe to a conda package, and add make it depend on numpy  1.8
          or  higher:  $ conda convert cvxopt-1.1.7.win-amd64-py2.7.exe -d 'numpy
          &gt;=1.8'
   
   
   
   Continuum Analytics              January 2015                         <B>CONDA(1)</B>
   </PRE>
